/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Locker, LockerInterface } from "../Locker";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_approver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "RequiredApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "UnAuthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_nounce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_data",
        type: "string",
      },
    ],
    name: "LockNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_nounce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_data",
        type: "string",
      },
    ],
    name: "ReleaseNFT",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_data",
        type: "string",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_data",
        type: "string",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061117e806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063150b7a0214610046578063c267ce5f14610076578063d1c89de814610092575b600080fd5b610060600480360381019061005b9190610b4c565b6100ae565b60405161006d9190610e32565b60405180910390f35b610090600480360381019061008b9190610c47565b6100c3565b005b6100ac60048036038101906100a79190610bcc565b610498565b005b600063150b7a0260e01b905095945050505050565b600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016101039190610ee4565b60206040518083038186803b15801561011b57600080fd5b505afa15801561012f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101539190610b23565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101c9578433856040517f2915f9340000000000000000000000000000000000000000000000000000000081526004016101c093929190610da1565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1663081812fc866040518263ffffffff1660e01b81526004016102049190610ee4565b60206040518083038186803b15801561021c57600080fd5b505afa158015610230573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102549190610b23565b90508073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146102cc57853330876040517f3d7bccf80000000000000000000000000000000000000000000000000000000081526004016102c39493929190610d5c565b60405180910390fd5b600160008154809291906102df90611062565b91905055508273ffffffffffffffffffffffffffffffffffffffff166342842e0e3330886040518463ffffffff1660e01b815260040161032193929190610da1565b600060405180830381600087803b15801561033b57600080fd5b505af115801561034f573d6000803e3d6000fd5b505050506103926040518060400160405280600e81526020017f4e465420436f6e74726163743a2000000000000000000000000000000000000081525087610835565b6103d16040518060400160405280600881526020017f53656e6465723a2000000000000000000000000000000000000000000000000081525033610835565b6104106040518060400160405280600981526020017f546f6b656e49443a200000000000000000000000000000000000000000000000815250866108d1565b61044f6040518060400160405280601081526020017f41726269747261676520646174613a20000000000000000000000000000000008152508561096d565b7f4fee5ebb8064020f4f38f427e9d749e3a49779a1805930493ac35ca840f5edd686338760015488604051610488959493929190610dd8565b60405180910390a1505050505050565b600084905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b81526004016104d89190610ee4565b60206040518083038186803b1580156104f057600080fd5b505afa158015610504573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105289190610b23565b90508073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461059e578533866040517f2915f93400000000000000000000000000000000000000000000000000000000815260040161059593929190610da1565b60405180910390fd5b600260008154809291906105b190611062565b91905055508573ffffffffffffffffffffffffffffffffffffffff163085876040516024016105e293929190610da1565b6040516020818303038152906040527f42842e0e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161066c9190610d45565b6000604051808303816000865af19150503d80600081146106a9576040519150601f19603f3d011682016040523d82523d6000602084013e6106ae565b606091505b5050506106f06040518060400160405280600e81526020017f4e465420436f6e74726163743a2000000000000000000000000000000000000081525087610835565b61072f6040518060400160405280600a81526020017f4f70657261746f723a200000000000000000000000000000000000000000000081525033610835565b61076e6040518060400160405280600a81526020017f52656365697665723a200000000000000000000000000000000000000000000081525085610835565b6107ad6040518060400160405280600981526020017f546f6b656e49443a200000000000000000000000000000000000000000000000815250866108d1565b6107ec6040518060400160405280601081526020017f41726269747261676520646174613a20000000000000000000000000000000008152508461096d565b7f70bd022d34c1d3f31f5de67a2f3f26a19fd99a9f868ee153dabe6cd7fb7e50ec86858760025487604051610825959493929190610dd8565b60405180910390a1505050505050565b6108cd828260405160240161084b929190610e4d565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a09565b5050565b61096982826040516024016108e7929190610eb4565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a09565b5050565b610a058282604051602401610983929190610e7d565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a09565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000610a45610a4084610f24565b610eff565b905082815260208101848484011115610a5d57600080fd5b610a68848285610fef565b509392505050565b600081359050610a7f8161111a565b92915050565b600081519050610a948161111a565b92915050565b60008083601f840112610aac57600080fd5b8235905067ffffffffffffffff811115610ac557600080fd5b602083019150836001820283011115610add57600080fd5b9250929050565b600082601f830112610af557600080fd5b8135610b05848260208601610a32565b91505092915050565b600081359050610b1d81611131565b92915050565b600060208284031215610b3557600080fd5b6000610b4384828501610a85565b91505092915050565b600080600080600060808688031215610b6457600080fd5b6000610b7288828901610a70565b9550506020610b8388828901610a70565b9450506040610b9488828901610b0e565b935050606086013567ffffffffffffffff811115610bb157600080fd5b610bbd88828901610a9a565b92509250509295509295909350565b60008060008060808587031215610be257600080fd5b6000610bf087828801610a70565b9450506020610c0187828801610b0e565b9350506040610c1287828801610a70565b925050606085013567ffffffffffffffff811115610c2f57600080fd5b610c3b87828801610ae4565b91505092959194509250565b600080600060608486031215610c5c57600080fd5b6000610c6a86828701610a70565b9350506020610c7b86828701610b0e565b925050604084013567ffffffffffffffff811115610c9857600080fd5b610ca486828701610ae4565b9150509250925092565b610cb781610f87565b82525050565b610cc681610f99565b82525050565b6000610cd782610f55565b610ce18185610f6b565b9350610cf1818560208601610ffe565b80840191505092915050565b6000610d0882610f60565b610d128185610f76565b9350610d22818560208601610ffe565b610d2b81611109565b840191505092915050565b610d3f81610fe5565b82525050565b6000610d518284610ccc565b915081905092915050565b6000608082019050610d716000830187610cae565b610d7e6020830186610cae565b610d8b6040830185610cae565b610d986060830184610d36565b95945050505050565b6000606082019050610db66000830186610cae565b610dc36020830185610cae565b610dd06040830184610d36565b949350505050565b600060a082019050610ded6000830188610cae565b610dfa6020830187610cae565b610e076040830186610d36565b610e146060830185610d36565b8181036080830152610e268184610cfd565b90509695505050505050565b6000602082019050610e476000830184610cbd565b92915050565b60006040820190508181036000830152610e678185610cfd565b9050610e766020830184610cae565b9392505050565b60006040820190508181036000830152610e978185610cfd565b90508181036020830152610eab8184610cfd565b90509392505050565b60006040820190508181036000830152610ece8185610cfd565b9050610edd6020830184610d36565b9392505050565b6000602082019050610ef96000830184610d36565b92915050565b6000610f09610f1a565b9050610f158282611031565b919050565b6000604051905090565b600067ffffffffffffffff821115610f3f57610f3e6110da565b5b610f4882611109565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610f9282610fc5565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561101c578082015181840152602081019050611001565b8381111561102b576000848401525b50505050565b61103a82611109565b810181811067ffffffffffffffff82111715611059576110586110da565b5b80604052505050565b600061106d82610fe5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110a05761109f6110ab565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61112381610f87565b811461112e57600080fd5b50565b61113a81610fe5565b811461114557600080fd5b5056fea2646970667358221220cf266936f136459fb2065548710d3274e117f22d9c2ee9441f2942d8c659df4164736f6c63430008040033";

export class Locker__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Locker> {
    return super.deploy(overrides || {}) as Promise<Locker>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Locker {
    return super.attach(address) as Locker;
  }
  connect(signer: Signer): Locker__factory {
    return super.connect(signer) as Locker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockerInterface {
    return new utils.Interface(_abi) as LockerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Locker {
    return new Contract(address, _abi, signerOrProvider) as Locker;
  }
}
